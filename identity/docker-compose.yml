# docker compose -f docker-compose.yml up --force-recreate --build -d

# docker compose -f docker-compose.yml build [services]
# docker compose -f docker-compose.yml up --no-deps -d [services]

# docker compose -f docker-compose.yml down

version: "3.9"

services:
  proxy:
    image: jwilder/nginx-proxy
    container_name: nginx
    ports:
      - ${PROXY_PORT_1}:80
      - ${PROXY_PORT_2}:443
    volumes:
      - ${SHARED_CERT_DIR}:/etc/nginx/certs:ro
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - ${SHARED_CERT_DIR}/../nginx/vhost.d:/etc/nginx/vhost.d
    networks:
      frontend:
      backend:
        aliases:
          - sts.skoruba.local
          - admin.skoruba.local
          - admin-api.skoruba.local
    restart: always

  # ui-identity:
  #   container_name: identity_ui
  #   image: skoruba/identityserver4-admin:2.0.1
  #   environment:
  #     VIRTUAL_HOST: ${UI_HOSTNAME}
  #     AdminConfiguration__RequireHttpsMetadata: ${HTTPS_META}
  #     DockerConfiguration__UpdateCaCertificate: ${UPDATE_CERT}
  #     ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT}
  #     ConnectionStrings__ConfigurationDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__PersistedGrantDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__IdentityDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__AdminLogDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__AdminAuditLogDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__DataProtectionDbConnection: ${CONNECTION_STRING}
  #     Serilog__WriteTo__1__Args__connectionString: ${CONNECTION_STRING}
  #     AdminConfiguration__IdentityAdminBaseUrl: ${UI_URL}
  #     AdminConfiguration__IdentityAdminRedirectUri: ${UI_URL}/signin-oidc
  #     AdminConfiguration__IdentityServerBaseUrl: ${STS_URL}
  #     IdentityServerData__Clients__0__ClientUri: ${UI_URL}
  #     IdentityServerData__Clients__0__RedirectUris__0: ${UI_URL}/signin-oidc
  #     IdentityServerData__Clients__0__FrontChannelLogoutUri: ${UI_URL}/signin-oidc
  #     IdentityServerData__Clients__0__PostLogoutRedirectUris__0: ${UI_URL}/signout-callback-oidc
  #     IdentityServerData__Clients__0__AllowedCorsOrigins__0: ${UI_URL}
  #     IdentityServerData__Clients__1__RedirectUris__0: ${API_URL}/swagger/oauth2-redirect.html
  #   command: dotnet Skoruba.IdentityServer4.Admin.dll /seed
  #   volumes:
  #     - ${SHARED_ID_CONF}:/app/identitydata.json
  #     - ${SHARED_ISD_CONF}:/app/identityserverdata.json
  #     - ${SHARED_LOG_CONF}:/app/serilog.json
  #     - ${SHARED_CERT}:/usr/local/share/ca-certificates/cacerts.crt
  #   networks:
  #     - frontend
  #     - backend
  #     - infrastructure
  #   restart: unless-stopped
  #   links:
  #     - sts-identity
  #     - db-identity
  #   depends_on:
  #     - sts-identity
  #     - db-identity

  # api-identity:
  #   container_name: identity_api
  #   image: skoruba/identityserver4-admin-api:2.0.1
  #   environment:
  #     VIRTUAL_HOST: ${API_HOST}
  #     AdminConfiguration__RequireHttpsMetadata: ${HTTPS_META}
  #     DockerConfiguration__UpdateCaCertificate: ${UPDATE_CERT}
  #     ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT}
  #     AdminApiConfiguration__ApiBaseUrl: ${API_URL}
  #     AdminApiConfiguration__IdentityServerBaseUrl: ${STS_URL}
  #     ConnectionStrings__ConfigurationDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__PersistedGrantDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__IdentityDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__AdminLogDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__AdminAuditLogDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__DataProtectionDbConnection: ${CONNECTION_STRING}
  #   volumes:
  #     - ${SHARED_LOG_CONF}:/app/serilog.json
  #     - ${SHARED_CERT}:/usr/local/share/ca-certificates/cacerts.crt
  #   networks:
  #     - backend
  #     - infrastructure
  #   restart: unless-stopped
  #   links:
  #     - sts-identity
  #     - db-identity
  #   depends_on:
  #     - sts-identity
  #     - db-identity

  # sts-identity:
  #   container_name: identity_sts
  #   image: skoruba/identityserver4-sts-identity:2.0.1
  #   environment:
  #     VIRTUAL_HOST: ${STS_HOST}
  #     AdminConfiguration__RequireHttpsMetadata: ${HTTPS_META}
  #     DockerConfiguration__UpdateCaCertificate: ${UPDATE_CERT}
  #     ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT}
  #     AdminConfiguration__IdentityAdminBaseUrl: ${UI_URL}
  #     AdvancedConfiguration__IssuerUri: ${STS_URL}
  #     ConnectionStrings__ConfigurationDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__PersistedGrantDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__IdentityDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__AdminLogDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__AdminAuditLogDbConnection: ${CONNECTION_STRING}
  #     ConnectionStrings__DataProtectionDbConnection: ${CONNECTION_STRING}
  #   volumes:
  #     - ${SHARED_LOG_CONF}:/app/serilog.json
  #     - ${SHARE_CERT}:/usr/local/share/ca-certificates/cacerts.crt
  #   networks:
  #     infrastructure:
  #       aliases:
  #         - sts.skoruba.local
  #   restart: unless-stopped
  #   links:
  #     - db-identity
  #   depends_on:
  #     - db-identity

  db-identity:
    container_name: identity_db
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      POSTGRED_INITDB_ARGS: --data-checkums
      LANG: en_ZA.utf8
    volumes:
      - ${PG_DATA_DIR}:/var/lib/postgresql/data
    networks:
      - backend
      - infrastructure
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - backend
      - infrastructure
    links:
      - db-identity

networks:
  infrastructure:
  frontend:
  backend:
