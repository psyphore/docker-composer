# docker compose -f docker-compose.yml up --force-recreate --build -d

# docker compose -f docker-compose.yml build [services]
# docker compose -f docker-compose.yml up --no-deps -d [services]

# docker compose -f docker-compose.yml down

version: "3.9"

services:
  db-server:
    container_name: n4j-e
    image: neo4j:4.2-enterprise
    volumes:
      - ${NEO4J_path}\data:/var/lib/neo4j/data
      - ${NEO4J_path}\logs:/var/lib/neo4j/logs
      - ${NEO4J_path}\conf:/var/lib/neo4j/conf
      - ${NEO4J_path}\plugins:/var/lib/neo4j/plugins
      - ${NEO4J_path}\import:/var/lib/neo4j/import
      - ${NEO4J_path}\certificates:/var/lib/neo4j/certificates
      - ${NEO4J_path}\run:/var/lib/neo4j/run
    ports:
      - ${NEO4J_HTTP}:7474   # Http protocol - Used by the Neo4j Browser. Also used by REST API. (Development)
      - ${NEO4J_BOLT}:7687   # Bolt protocol - Used by Cypher Shell and by the Neo4j Browser.
      # - ${NEO4J_HTTPS}:7473  # Https protocol - Used by the Neo4j Browser. Also used by REST API. (Production)
    networks:
      - infrastructure
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=$NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH=$NEO4J_AUTH
      - NEO4JLABS_PLUGINS=$NEO4JLABS_PLUGINS
      - NEO4J_dbms_security_procedures_unrestricted=$NEO4J_dbms_security_procedures_unrestricted
      - NEO4J_dbms_security_procedures_allowlist=$NEO4J_dbms_security_procedures_allowlist
      - NEO4J_dbms_allow_upgrade=$NEO4J_dbms_allow_upgrade
      - NEO4J_dbms_backup_enabled=$NEO4J_dbms_backup_enabled
      - NEO4J_apoc_export_file_enabled=$NEO4J_apoc_export_file_enabled
      - NEO4J_apoc_import_file_enabled=$NEO4J_apoc_import_file_enabled
      - NEO4J_apoc_import_file_use__neo4j__config=$NEO4J_apoc_import_file_use__neo4j__config
      - NEO4J_dbms_memory_pagecache_size=$NEO4J_dbms_memory_pagecache_size
    restart: unless-stopped
    depends_on: 
      - seq-metrics
  
  seq-metrics:
    container_name: seq-metrics
    image: datalust/seq:latest
    volumes:
      - ${SEQ_DATA_PATH}:/data
    networks:
      - infrastructure
    ports:
      - ${SEQ_UI_PORT}:80
      - ${SEQ_API_PORT}:5341
    environment:
      - ACCEPT_EULA=$SEQ_ACCEPT_LICENSE_AGREEMENT
    restart: unless-stopped
    # mem_limit: ${SEQ_MEM_LIMIT}
    depends_on: 
      - cache

  cache:
    container_name: cache
    image: redis:alpine
    networks:
      - infrastructure
    command: ${REDIS_ARGS}
    volumes: 
      - ${REDIS_DATA}:/data
    restart: unless-stopped

networks:
  infrastructure:
  frontend:
  backend:

# volumes: 
#   n4j: